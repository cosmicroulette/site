{"version":3,"sources":["Web3Util.js","AppNav.js","PlanetHome.js","CreatePlanet.js","MyWallet.js","PlanetDetail.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","a","window","ethereum","web3","Web3","enable","console","log","process","provider","providers","HttpProvider","getInstance","eth","net","getId","networkId","getAccounts","user","deployedNetwork","DigitizedPlanetAVAX","networks","instance","Contract","abi","address","from","DigitizedPlanetBSC","DigitizedPlanetFTM","DigitizedPlanetONE","AppNav","props","handleNavClick","param","e","preventDefault","history","push","componentDidMount","contractInstance","methods","symbol","call","setState","name","bind","state","className","to","id","style","marginRight","React","Component","withRouter","sectionStyle","width","minHeight","paddingBottom","backgroundSize","background","backgroundAttachment","PlanetHome","loadDigitalArts","hasData","message","rows","columns","tokenIds","title","desc","price","publishDate","author","image","total","buyArt","this","findAllPendingPlanets","result","ids","newIds","counter","length","randomID","Math","floor","random","splice","_total","row","ceil","rowArr","Array","apply","map","Number","colArr","_tokenIds","_title","_desc","_price","_publishDate","_image","_author","idx","resetPendingArts","i","j","tokenId","findPlanet","art","priceInEther","utils","fromWei","planetId","creatorWallet","planetBirthday","priceInWei","toWei","buyPlanet","send","value","location","reload","borderRadius","finalString","color","key","col","marginTop","getStyle","href","height","marginBottom","src","whiteSpace","overflow","textOverflow","onClick","role","target","backgroundRepeat","CreatePlanet","getBalance","balanceInWei","balance","getNetworkType","networkType","imageChange","event","imageValue","categoryChange","categoryValue","submitHandler","description","authorName","date","imageUrl","localPrice","isNotEmpty","publishArt","changeHandler","onClickHandler","data","FormData","append","selectedFile","axios","post","then","res","statusText","val","createTokenAndSellPlanet","findMyPlanets","myPlanets","onSubmit","type","placeholder","onChange","MyWallet","loadMyDigitalArts","status","sellTokenId","sellPrice","showModal","changeRecipient","_status","transfer","recipientAddress","resellPlanet","data-toggle","sellPlanet","data-target","transferPlanet","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","submitPlanetSell","PlanetDetail","loadDigitalPlanet","match","params","selectedId","loadDigitalPlanetWithID","ID","ownerOf","owner","index","avaxPrice","hasNext","parseInt","next","Routes","exact","path","component","render","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be0ce3f7.chunk.js","sourcesContent":["import Web3 from 'web3';\r\nimport DigitizedPlanetAVAX from './abi/DigitizedPlanetAVAX.json'\r\nimport DigitizedPlanetONE from './abi/DigitizedPlanetONE.json'\r\nimport DigitizedPlanetBSC from './abi/DigitizedPlanetBSC.json'\r\nimport DigitizedPlanetFTM from './abi/DigitizedPlanetFTM.json'\r\n\r\n\r\nexport const getWeb3 = () =>\r\n    new Promise(async(resolve, reject) => {\r\n    //window.addEventListener(\"load\", async () => {\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n        await window.ethereum.enable();\r\n        resolve(web3);\r\n        } catch (error) {\r\n        reject(error);\r\n        }\r\n    } else if (window.web3) {\r\n        // load metamask provider\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n    } else {\r\n        console.log(process.env.PUBLIC_URL)\r\n        const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n    }\r\n    //});\r\n});\r\nexport const getInstance = async (web3) => {\r\n    const networkId = await web3.eth.net.getId();\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n\r\n    //if avalanche \r\n    if(networkId ==1){\r\n        const deployedNetwork = DigitizedPlanetAVAX.networks[networkId];\r\n    \r\n        window.instance = new web3.eth.Contract(\r\n            DigitizedPlanetAVAX.abi,\r\n            deployedNetwork && deployedNetwork.address,\r\n            {\r\n                from: window.user\r\n            }\r\n        );\r\n        return window.instance;\r\n    }\r\n    //for BSC\r\n    else if(networkId ==56){\r\n        const deployedNetwork = DigitizedPlanetBSC.networks[networkId];\r\n        window.instance = new web3.eth.Contract(\r\n            DigitizedPlanetBSC.abi,\r\n            deployedNetwork && deployedNetwork.address,\r\n            {\r\n                from: window.user\r\n            }\r\n        );\r\n        return window.instance;\r\n    }\r\n     //for fantom\r\n     else if(networkId ==250){\r\n        const deployedNetwork = DigitizedPlanetFTM.networks[networkId];\r\n        window.instance = new web3.eth.Contract(\r\n            DigitizedPlanetFTM.abi,\r\n            deployedNetwork && deployedNetwork.address,\r\n            {\r\n                from: window.user\r\n            }\r\n        );\r\n        return window.instance;\r\n    }\r\n      //for harmony\r\n      else if(networkId ==1666600000){\r\n        const deployedNetwork = DigitizedPlanetONE.networks[networkId];\r\n        window.instance = new web3.eth.Contract(\r\n            DigitizedPlanetONE.abi,\r\n            deployedNetwork && deployedNetwork.address,\r\n            {\r\n                from: window.user\r\n            }\r\n        );\r\n        return window.instance;\r\n    }\r\n    else{\r\n        return window.instance;\r\n    }\r\n    \r\n}","import React from \"react\";\r\nimport { withRouter,Link} from 'react-router-dom';\r\nimport \"./App.css\";\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\n\r\nclass AppNav extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleNavClick = this.handleNavClick.bind(this);\r\n      this.state = { \r\n            name: '',\r\n            symbol: ''\r\n        };\r\n    }\r\n    handleNavClick = param => e => {\r\n      e.preventDefault();\r\n      this.props.history.push('/'+param)\r\n    };\r\n    componentDidMount = async () => {\r\n\r\n      const web3 = await getWeb3();\r\n      const contractInstance = await getInstance(web3);\r\n      window.user = (await web3.eth.getAccounts())[0];\r\n      const symbol = await contractInstance.methods.symbol().call()\r\n\r\n      this.setState({ symbol: symbol });\r\n            const name = await contractInstance.methods.name().call();\r\n\r\n      this.setState({ name: name });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark stylish-color\">\r\n        <div className=\"navbar-brand\">  \r\n        <Link to=\"/\">\r\n            <a id=\"logo\" className=\"navbar-item text-white\" >  \r\n                Cosmic Roulette {/*<span className=\"hideOnMobile\">- NFT Marketplace on Avalanche Mainnet</span>*/} \r\n            </a>    </Link>\r\n        </div> \r\n      <form className=\"form-inline  my-2 my-lg-0 ml-auto\" style={{marginRight:\"15px\"}}>\r\n        <Link to=\"/\">\r\n        <a  className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\">Roll random planet</a> </Link>\r\n        <Link to=\"/rollNft\">\r\n        <a className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\"  >Create your NFT</a>  </Link>\r\n      <Link to=\"/myWallet\">\r\n        <a className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\"  >My universe</a> </Link>\r\n        </form>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AppNav);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppNav from \"./AppNav\";\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\nvar sectionStyle = {\r\n  width: \"100vw\",\r\n  minHeight:\"110vh\",\r\n  paddingBottom:\"150px\",\r\n  backgroundSize: 'cover',\r\n  background:\"#000000ee\",\r\n  backgroundAttachment: 'fixed'\r\n};\r\n\r\nclass PlanetHome extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      rows:[],\r\n      columns: [],\r\n      user: '',\r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      total: 0,\r\n      contractInstance: '',\r\n      user:'',\r\n      networkId:0,\r\n      planetId: 0,\r\n      creatorWallet:\"\",\r\n      planetBirthday:\"\"\r\n    };\r\n    this.buyArt = this.buyArt.bind(this);\r\n  }\r\n  resetPendingArts() {\r\n    this.setState({ \r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      total: 0\r\n    });\r\n  }\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const networkId = await web3.eth.net.getId();\r\n    \r\n    this.setState({ user: window.user,networkId });\r\n    this.setState({ contractInstance: contractInstance });\r\n    await this.loadDigitalArts(web3);\r\n\r\n  }\r\n  async loadDigitalArts(web3) {\r\n      try {\r\n        let ids;\r\n        const result = await this.state.contractInstance.methods.findAllPendingPlanets().call();\r\n        ids = result[0];\r\n        let newIds = [];\r\n\r\n        for(let counter =0;counter<ids.length;++counter){\r\n            newIds[newIds.length]=ids[counter];\r\n        }\r\n        // only show last planet\r\n        let randomID =  newIds[Math.floor(Math.random() * newIds.length)];\r\n\r\n        newIds.splice(1);\r\n        newIds[0] = randomID\r\n\r\n        let _total = newIds.length;\r\n        if(newIds && _total>0) {\r\n          let row;\r\n          if(_total<=3) {\r\n            row = 1;\r\n          } else {\r\n            row = Math.ceil(_total/3);\r\n          }\r\n          let columns = 3;\r\n          this.setState({ rows: [], columns: [] });\r\n          let rowArr = Array.apply(null, {length: row}).map(Number.call, Number);\r\n          let colArr = Array.apply(null, {length: columns}).map(Number.call, Number);\r\n          this.setState({ rows: rowArr, columns: colArr });\r\n          let _tokenIds= [], _title =[],  _desc= [], _price= [], _publishDate= [],  _image =[], _author=[];\r\n          let idx =0;\r\n          this.resetPendingArts();\r\n          for(let i = 0; i<row; i++) {\r\n            for(let j = 0; j < columns; j++) {\r\n               if(idx<_total) {\r\n                 let tokenId= newIds[idx];\r\n                 const art = await this.state.contractInstance.methods.findPlanet(tokenId).call();\r\n                 const priceInEther = web3.utils.fromWei(art[3], 'ether');\r\n                  /*\r\n                  id: index,\r\n                  title: _title,\r\n                  description: _description,\r\n                  price: _price,\r\n                  date: _date,\r\n                  authorName: _authorName,\r\n                  author: msg.sender,\r\n                  owner: msg.sender,\r\n                  status: 1,\r\n                  image: _image\r\n                  */\r\n                 _tokenIds.push(art[0]);\r\n                 _title.push(art[1]);\r\n                 _desc.push(art[2]);\r\n                 _price.push(priceInEther);\r\n                 _publishDate.push(art[5]);\r\n                 _image.push(art[9]);\r\n                 _author.push(art[6]);\r\n                 this.setState({\r\n                   planetId:art[0],\r\n                   creatorWallet:art[7],\r\n                   planetBirthday:art[5]\r\n                 })\r\n\r\n               }\r\n              idx++;\r\n            }\r\n        }\r\n         \r\n          this.setState({ \r\n            tokenIds: _tokenIds,\r\n            title: _title,\r\n            desc: _desc,\r\n            price: _price,\r\n            publishDate: _publishDate,\r\n            author: _author,\r\n            image: _image,\r\n            total: _total\r\n          });\r\n          this.setState({ hasData: true });\r\n        } else {\r\n          this.setState({ hasData: false });\r\n        }\r\n \r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  async buyArt(tokenId, priceInEther) {\r\n    try {\r\n      const priceInWei =  window.web3.utils.toWei(priceInEther, 'ether');\r\n      await this.state.contractInstance.methods.buyPlanet(tokenId).send({\r\n          from: this.state.user, value: priceInWei\r\n      })\r\n      window.location.reload(); \r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n\r\n  \r\n  getStyle(id){\r\n    \r\n    let style = {background:\"white\",paddingBottom:\"15px\",borderRadius:\"55px\"}\r\n\r\n    return style\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.hasData) {\r\n\r\n      let networkId, generationNumber, planetId, creatorWallet, planetBirthday, finalString\r\n\r\n      networkId = this.state.networkId\r\n      generationNumber = 1\r\n      planetId = this.state.planetId\r\n      creatorWallet = this.state.creatorWallet\r\n      planetBirthday = this.state.planetBirthday\r\n\r\n      finalString = networkId+\"-\"+generationNumber+\"-\"+planetId+\"-\"+creatorWallet+\"-\"+planetBirthday\r\n      console.log(\"@@@\",finalString)\r\n\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav ></AppNav>\r\n          <section className=\"text-center\">\r\n\r\n          <div style={{color:\"white\"}}className=\"h1-responsive font-weight-bold text-center my-5\">\r\n            Random planet in the current blockchain \r\n          </div>\r\n       \r\n            <div className=\"container\">\r\n               {this.state.rows.map((row, i) =>\r\n                <div className=\"row\"  key={i}>\r\n                  {this.state.columns.map((col, j) =>\r\n                    <div  style={{marginTop:\"50px\"}} className=\"col-lg-12 col-md-12 mb-lg-0 mb-0\" key={j}>\r\n                        { i*3+j < this.state.total &&\r\n                            <div style={this.getStyle(this.state.tokenIds[i*3+j])}>\r\n                            <div className=\"view overlay rounded z-depth-2 mb-2\">\r\n                             <a href={\"/#/art/\"+this.state.tokenIds[i*3+j]} >\r\n                               {/* this is for local \r\n                               <iframe style={{width:\"100%\",height:\"500px\",marginBottom:\"-15px\"}} src={\"http://localhost:8089/planet.html?seed=\"+finalString} />*/}\r\n                                <iframe style={{width:\"100%\",height:\"500px\",marginBottom:\"-15px\"}} src={\"https://cosmicroulette.github.io/site/planet.html?seed=\"+finalString} />\r\n                              </a>\r\n                            </div>\r\n                            <h5 className=\"font-weight-bold mb-1 marginTopC\"><Link to={\"/planet/\"+this.state.tokenIds[i*3+j]}>Planet #{this.state.tokenIds[i*3+j]}</Link>, {this.state.title[i*3+j]}</h5>\r\n                            <p style={{whiteSpace: 'nowrap',overflow: 'hidden',textOverflow:'ellipsis'}}>by <span className=\"font-weight-bold\">@{this.state.author[i*3+j]}</span></p>\r\n                         \r\n                         {this.state.creatorWallet != window.user?\r\n                          <button className=\"btn btn-red btn-rounded btn-md\" onClick={e => (e.preventDefault(),this.buyArt(this.state.tokenIds[i*3+j], this.state.price[i*3+j]))}>Collect this planet for  {this.state.price[i*3+j]} $AVAX</button>\r\n                        :null}\r\n                           {/*<Link to={\"/rollNft\"}> <button className=\"btn btn-red btn-rounded btn-md\">Create a brand new NFT for X $AVAX</button></Link>*/}\r\n\r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                  )}\r\n                </div>\r\n              )}\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n\r\n            <div  style={{color:\"white\"}} className=\"h1-responsive normal font-weight-bold text-center my-5\">\r\n              Create and trade Digital Planets on Cosmic Roulette \r\n            </div>\r\n            <p  style={{color:\"white\"}}  className=\"h1-responsive  normal font-weight-bold text-center my-5\">\r\n            All the planet data on Cosmic Roulette are on the blockchain\r\n            </p>\r\n        \r\n       \r\n            \r\n            <div className=\"container\">\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                You need metamask installed and configured on Avalanche c-chain to use this site! Learn how to do it by checking the links below. \r\n              </div>\r\n              <p ><a className=\"customA\" href=\"https://docs.avax.network/build/tutorials/smart-contracts/deploy-a-smart-contract-on-avalanche-using-remix-and-metamask\" target=\"_blank\">How to change metamask Network to Avax C-Chain Mainnet?</a></p>\r\n              <p ><a className=\"customA\" href=\"https://docs.avax.network/build/tutorials/platform/transfer-avax-between-x-chain-and-c-chain\" target=\"_blank\">Need help transferring $AVAX to c-chain?</a></p>\r\n              \r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default PlanetHome;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppNav from \"./AppNav\";\r\nimport axios from 'axios';\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\n\r\nvar sectionStyle = {\r\n    width: \"100vw\",\r\n    minHeight:\"110vh\",\r\n    paddingBottom:\"150px\",\r\n    background:\"#000000ee\",\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover'\r\n};\r\n\r\nclass CreatePlanet extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.imageChange = this.imageChange.bind(this);\r\n      this.submitHandler = this.submitHandler.bind(this);\r\n      this.changeHandler = this.changeHandler.bind(this);\r\n      this.state = { \r\n            imageValue: 'NA',\r\n            description: 'NA',\r\n            title: '', \r\n            authorName: '',\r\n            imageUrl:'NA',\r\n            price: null,\r\n            date:'',\r\n            user: '',\r\n            balance: 0,\r\n            contractInstance: '',\r\n            networkId:'',\r\n            networkType:'',\r\n            selectedFile: null,\r\n        };\r\n    }\r\n    componentDidMount = async () => {\r\n        const web3 = await getWeb3();\r\n        window.web3 = web3;\r\n        const contractInstance = await getInstance(web3);\r\n        window.user = (await web3.eth.getAccounts())[0];\r\n        const balanceInWei = await web3.eth.getBalance(window.user);\r\n        var balance = web3.utils.fromWei(balanceInWei, 'ether');\r\n        const networkId = await web3.eth.net.getId();\r\n        const networkType = await web3.eth.net.getNetworkType();\r\n        this.setState({ user: window.user });\r\n        this.setState({ balance: balance});\r\n        this.setState({ contractInstance: contractInstance });\r\n        this.setState({ networkId: networkId});\r\n        this.setState({ networkType: networkType});\r\n      }\r\n    imageChange = (event) => {\r\n        this.setState({ imageValue: event.target.value });\r\n    };\r\n    categoryChange = (event) => {\r\n        this.setState({ categoryValue: event.target.value });\r\n    };\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const {  imageValue, description, title, authorName, price, date,imageUrl} = this.state;\r\n        let localPrice = 0\r\n        if(price != null){\r\n            localPrice = price\r\n        }\r\n        if(this.isNotEmpty(title) &&this.isNotEmpty(description) &&this.isNotEmpty(authorName) \r\n            &&this.isNotEmpty(date)&&this.isNotEmpty(imageUrl) && this.isNotEmpty(localPrice) && imageUrl !== \"images/upload-file.png\") {\r\n            const priceInWei =  window.web3.utils.toWei(localPrice, 'ether');\r\n            this.publishArt(title, description, date, authorName, priceInWei, imageUrl);  \r\n        }\r\n    };\r\n    isNotEmpty(val) {\r\n        return val&& val.length>0;\r\n    }\r\n    changeHandler = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            }, function(){ })\r\n    };\r\n\r\n    onClickHandler = () => {\r\n        const data = new FormData()\r\n        data.append('file', this.state.selectedFile)\r\n        axios.post(\"http://localhost:8000/upload\", data, { \r\n           // receive two    parameter endpoint url ,form data\r\n       }).then(res => { // then print response status\r\n        console.log(res.statusText)\r\n        this.setState({ imageValue: \"images/\" + this.state.selectedFile.name });\r\n     })\r\n    }\r\n\r\n    async publishArt(title, description, date, authorName, price, imageValue) {\r\n        try {\r\n            //check network\r\n            //add correct price for network\r\n            const priceInWei =  window.web3.utils.toWei(\"1\", 'ether');\r\n\r\n            await this.state.contractInstance.methods.createTokenAndSellPlanet(title,description, date, authorName, price, imageValue).send({\r\n                from: this.state.user, value:priceInWei\r\n            })\r\n            let myPlanets = await this.state.contractInstance.methods.findMyPlanets().call()\r\n            if(myPlanets.length>0){\r\n                this.props.history.push(`/planet/`+myPlanets[myPlanets.length-1])\r\n                window.location.reload(); \r\n            }\r\n        } catch (e) {console.log('Error', e)}\r\n    }\r\n\r\n\r\nrender() {\r\n    return (\r\n        <div style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"mx-auto\" style={{ marginTop: '20px'}}>\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-2 mb-md-0 mb-5\"></div>\r\n                  <div className=\"col-md-8 mb-md-0 mb-5\">\r\n                      <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                              <form className=\"text-center border border-light p-5\" onSubmit={this.submitHandler}>\r\n                                  <p className=\"h4 mb-4\">A <i>unique</i> planet will be created using the information below</p>\r\n                                  <div className=\"row\">\r\n                                        <div className=\"col-md-3\"></div>\r\n                                      <div className=\"col-md-6 mb-md-0 mb-5\">\r\n                                          <input className=\"form-control mb-4\" id=\"title\" name=\"title\" type=\"text\" placeholder=\"Planet name\" onChange={this.changeHandler}  value={this.state.title}/>\r\n                                        {/* <input className=\"form-control mb-4\" id=\"description\" name=\"description\"  type=\"text\" placeholder=\"Description\" onChange={this.changeHandler}  value={this.state.description}/> */} \r\n                                         <input className=\"form-control mb-4\" id=\"authorName\" name=\"authorName\" type=\"text\" placeholder=\"Author Name\" onChange={this.changeHandler}  value={this.state.authorName}/>\r\n                                         {/*<input className=\"form-control mb-4\" id=\"imageUrl\" name=\"imageUrl\" type=\"text\" placeholder=\"NFT URL\" onChange={this.changeHandler}  value={this.state.imageUrl}/>*/} \r\n                                         <input className=\"form-control mb-4\" id=\"price\" name=\"price\" type=\"text\" placeholder=\"Planet sale price in $AVAX\" onChange={this.changeHandler} value={this.state.price} />\r\n                                            <input className=\"form-control mb-4\" id=\"date\" name=\"date\" type=\"date\" placeholder=\"PLanet birthday\" onChange={this.changeHandler} value={this.state.date} />\r\n                                      </div>\r\n                                        <div className=\"col-md-3\"></div>\r\n                                      \r\n                                  </div>\r\n                             \r\n                                  <br></br><br></br>\r\n                                  <div className=\"row\">\r\n                                      <div className=\"col-md-3 mb-md-0 mb-5\"></div>\r\n                                      <div className=\"col-md-6 mb-md-0 mb-5\"><button className=\"btn btn-info\" type=\"submit\">Create your planet for 1 $AVAX</button></div>\r\n                                      <div className=\"col-md-3 mb-md-0 mb-5\"></div>\r\n\r\n                                  </div>\r\n                    \r\n                              </form>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-md-2 mb-md-0 mb-5\"></div>\r\n              </div>\r\n\r\n          </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default CreatePlanet;","import React from 'react';\r\nimport './App.css';\r\nimport AppNav from \"./AppNav\";\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\n\r\nvar sectionStyle = {\r\n  width: \"100vw\",\r\n  minHeight:\"110vh\",\r\n  paddingBottom:\"150px\",\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundSize: 'cover',\r\n  background:\"#000000ee\"\r\n\r\n};\r\n\r\n\r\nclass MyWallet extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      rows:[],\r\n      columns: [],\r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      status:[],\r\n      total: 0,\r\n      user: '',\r\n      balance: 0,\r\n      contractInstance: '',\r\n      networkId:'',\r\n      networkType:'',\r\n      sellTokenId: '',\r\n      sellPrice:0,\r\n      showModal: false\r\n    };\r\n    this.changeHandler = this.changeHandler.bind(this);\r\n    this.changeRecipient = this.changeRecipient.bind(this);\r\n  }\r\n  resetPendingArts() {\r\n    this.setState({ \r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      status:[],\r\n      total: 0\r\n    });\r\n  }\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const balanceInWei = await web3.eth.getBalance(window.user);\r\n    var balance = web3.utils.fromWei(balanceInWei, 'ether');\r\n    const networkId = await web3.eth.net.getId();\r\n    const networkType = await web3.eth.net.getNetworkType();\r\n    this.setState({ user: window.user });\r\n    this.setState({ balance: balance});\r\n    this.setState({ contractInstance: contractInstance });\r\n    this.setState({ networkId: networkId});\r\n    this.setState({ networkType: networkType});\r\n    await this.loadMyDigitalArts(web3);\r\n\r\n  }\r\n  async loadMyDigitalArts(web3) {\r\n      try {\r\n        let ids;\r\n        const result = await this.state.contractInstance.methods.findMyPlanets().call();\r\n        let _total = result.length;\r\n        if(_total>0) {\r\n          let row;\r\n          if(_total<=3) {\r\n            row = 1;\r\n          } else {\r\n            row = Math.ceil(_total/3);\r\n          }\r\n          let columns = 3;\r\n          let rowArr = Array.apply(null, {length: row}).map(Number.call, Number);\r\n          let colArr = Array.apply(null, {length: columns}).map(Number.call, Number);\r\n          this.setState({ rows: rowArr, columns: colArr });\r\n          let _tokenIds= [], _title =[],  _desc= [], _price= [], _publishDate= [],  _image =[], _author=[], _status=[];\r\n          let idx =0;\r\n          this.resetPendingArts();\r\n          for(let i = 0; i<row; i++) {\r\n            for(let j = 0; j < columns; j++) {\r\n               if(idx<_total) {\r\n                 let tokenId= result[idx];\r\n                 const art = await this.state.contractInstance.methods.findPlanet(tokenId).call();\r\n                 const priceInEther = web3.utils.fromWei(art[3], 'ether');\r\n                 _tokenIds.push(art[0]);\r\n                 _title.push(art[1]);\r\n                 _desc.push(art[2]);\r\n                 if(art[4]==1) {\r\n                    _status.push(\"In selling\");\r\n                 } else {\r\n                    _status.push(\"Publish\");\r\n                 }\r\n                \r\n                 _price.push(priceInEther);\r\n                 _publishDate.push(art[5]);\r\n                 _image.push(art[9]);\r\n                 _author.push(art[6]);\r\n               }\r\n              idx++;\r\n            }\r\n        }\r\n         \r\n          this.setState({ \r\n            tokenIds: _tokenIds,\r\n            title: _title,\r\n            desc: _desc,\r\n            price: _price,\r\n            publishDate: _publishDate,\r\n            author: _author,\r\n            status: _status,\r\n            image: _image,\r\n            total: _total\r\n          });\r\n          this.setState({ hasData: true });\r\n        } else {\r\n          this.setState({ hasData: false });\r\n        }\r\n \r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  changeHandler = event => {\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n        }, function(){ })\r\n   };\r\n   sellPlanet(tokenId) {\r\n    try {\r\n      //open  popup window\r\n      this.setState({ sellTokenId: tokenId, showModal: true });\r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n\r\n  async transferPlanet(tokenId){\r\n    try {\r\n       await this.state.contractInstance.methods.transfer(this.state.recipientAddress,tokenId).send({\r\n          from: this.state.user\r\n       })\r\n      window.location.reload(); \r\n    } catch (e) {console.log('Error', e)}\r\n  }\r\n  changeRecipient(event){\r\n    this.setState({\r\n      recipientAddress:event.target.value\r\n    })\r\n  }\r\n\r\n  async submitPlanetSell() {\r\n    try {\r\n      const priceInWei =  window.web3.utils.toWei(this.state.sellPrice, 'ether');\r\n       await this.state.contractInstance.methods.resellPlanet(this.state.sellTokenId, priceInWei).send({\r\n           from: this.state.user\r\n       })\r\n      window.location.reload(); \r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n  render() {\r\n    if (this.state.hasData) {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n            {/**\r\n            <div className=\"row mb-3 mt-3\">\r\n                    <div className=\"col-md-2 mb-md-0 mb-1\"></div>\r\n                    <div className=\"col-md-8 mb-md-0 mb-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body \">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">My Address:</span> {this.state.user}\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                <span className=\"font-weight-bold blue-grey-text\">Balance:</span> {this.state.balance} $AVAX\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2 mb-md-0 mb-1\"></div>\r\n                </div> */}\r\n            <h5 className=\"h1-responsive font-weight-bold text-center my-3\" style={{color:\"white\"}}>My universe</h5>\r\n            <div className=\"container\">\r\n               {this.state.rows.map((row, i) =>\r\n                <div className=\"row\"  key={i}>\r\n                  {this.state.columns.map((col, j) =>\r\n                    <div style={{marginTop:\"50px\"}} className=\"col-lg-4 col-md-12 mb-lg-0 mb-0\" key={j}>\r\n                        { i*3+j < this.state.total &&\r\n                            <div style={{background:\"white\",paddingBottom:\"15px\"}}>\r\n                            <div className=\"view overlay rounded z-depth-2 mb-2\">\r\n                           \r\n                            </div>\r\n                            <h4 className=\"font-weight-bold mb-1 marginTopC\">Planet information</h4>\r\n                            <h5 className=\"font-weight-bold mb-1 marginTopC\">ID: #{this.state.tokenIds[i*3+j]}</h5>\r\n                            <h5 className=\"font-weight-bold mb-1 marginTopC\">\r\n                            name:  {this.state.title[i*3+j]}\r\n                            </h5>\r\n                            <h5 className=\"font-weight-bold mb-1 marginTopC\">\r\n                            creator: {this.state.author[i*3+j]}\r\n                            </h5>\r\n                            <h5 className=\"font-weight-bold mb-1 marginTopC\">\r\n                            Birthday: {this.state.publishDate[i*3+j]}\r\n                            </h5>\r\n                            <h5 className=\"font-weight-bold mb-1 marginTopC\">\r\n                            price: {this.state.price[i*3+j]} $AVAX\r\n                            </h5>\r\n                            <p>\r\n                              <br/>\r\n                            <a className=\"dark-grey-text text20\" href={\"/#/planet/\"+this.state.tokenIds[i*3+j]}> Click here to see this planet</a>\r\n                            </p>\r\n                            {/*<p>by <span className=\"font-weight-bold\">{this.state.author[i*3+j]}</span>, {this.state.publishDate[i*3+j]}</p>\r\n                            \r\n                        <p className=\"alert alert-primary dark-grey-text text20\">{this.state.desc[i*3+j]}</p>*/}\r\n                            <br/>\r\n                              { this.state.status[i*3+j]==='Publish' ?\r\n                               <> <button className=\"btn btn-red btn-rounded btn-md\" data-toggle=\"modal\" onClick={e => (e.preventDefault(),this.sellPlanet(this.state.tokenIds[i*3+j]))} data-target=\".sell-modal\" >{this.state.status[i*3+j]} planet </button><br/></>\r\n                                :\r\n                                <p>\r\n                                  This planet currently is for sale\r\n                                  </p>\r\n                              }\r\n                              <button className=\"btn btn-red btn-rounded btn-md\" onClick={e => (e.preventDefault(),this.transferPlanet(this.state.tokenIds[i*3+j]))} data-target=\".sell-modal\" >Transfer NFT</button><br/>\r\n                              <input onChange={this.changeRecipient} placeholder=\"Recipient address\" />\r\n\r\n                            \r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                  )}\r\n                </div>\r\n              )}\r\n              </div>\r\n              <div className={`modal fade sell-modal ${this.props.showModal ? 'show' : ''}`} id=\"submitModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"submitModalLabel\"  aria-hidden=\"true\">\r\n                  <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                      <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"myLabel\">Publish NFT for sale: choose the planet price</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                      </div>\r\n                      <div className=\"modal-body\">\r\n                          <input className=\"form-control mb-4\" id=\"sellPrice\" name=\"sellPrice\"  type=\"text\" placeholder=\"Price $AVAX\"  onChange={this.changeHandler}  value={this.state.sellPrice}/>\r\n                      </div>\r\n                      <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => (e.preventDefault(),this.submitPlanetSell())}>Submit</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n            {/**\r\n          <div className=\"row mb-3 mt-3\">\r\n                <div className=\"col-md-2 mb-md-0 mb-1\"></div>\r\n                    <div className=\"col-md-8 mb-md-0 mb-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body \">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">My Address:</span> {this.state.user}\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                <span className=\"font-weight-bold blue-grey-text\">Balance:</span> {this.state.balance} $AVAX\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2 mb-md-0 mb-1\">\r\n                     \r\n                    </div>\r\n                </div> */}\r\n                <div className=\"col-md-2 mb-md-0 mb-1\">\r\n                     Loading universe\r\n                     </div>\r\n\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default MyWallet;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppNav from \"./AppNav\";\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\n\r\n\r\nvar sectionStyle = {\r\n  width: \"100vw\",\r\n  paddingBottom:\"150px\",\r\n  background:\"#000000ee\",\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundSize: 'cover'\r\n};\r\n\r\nclass PlanetDetail extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      rows:[],\r\n      columns: [],\r\n      user: '',\r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      total: 0,\r\n      contractInstance: '',\r\n      user:'',\r\n      selectedId:props.match.params.selectedId,\r\n      art:null,\r\n      priceInEther:0,\r\n      owner:'',\r\n      networkId:0,\r\n      planetId: 0,\r\n      creatorWallet:\"\",\r\n      planetBirthday:\"\",\r\n      index:0\r\n    };\r\n    this.buyPlanet = this.buyPlanet.bind(this);\r\n    this.loadDigitalPlanet = this.loadDigitalPlanet.bind(this)\r\n    this.loadDigitalPlanetWithID = this.loadDigitalPlanetWithID.bind(this)\r\n  }\r\n  resetPendingArts() {\r\n    this.setState({ \r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      total: 0\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const networkId = await web3.eth.net.getId();\r\n\r\n    this.setState({ user: window.user,networkId});\r\n    this.setState({ contractInstance: contractInstance });\r\n    \r\n    await this.loadDigitalPlanet(web3);\r\n\r\n  }\r\n\r\n  async loadDigitalPlanetWithID(ID) {\r\n    const web3 = await getWeb3();\r\n    window.location.href=\"/#/planet/\"+ID\r\n    try {\r\n      const art = await this.state.contractInstance.methods.findPlanet(ID).call();\r\n      const owner = await this.state.contractInstance.methods.ownerOf(ID).call();\r\n      const index = await this.state.contractInstance.methods.index().call()\r\n\r\n      if(art != null){\r\n        let avaxPrice =  web3.utils.fromWei(art[3], 'ether')\r\n        this.setState({ hasData: true,art,avaxPrice,owner,\r\n          planetId:art[0],\r\n          creatorWallet:art[7],\r\n          planetBirthday:art[5],\r\n          art,\r\n          selectedId:ID,\r\n          index\r\n        })\r\n      } else {\r\n        this.setState({ hasData: false });\r\n      }\r\n\r\n  } catch (e) {console.log('Error', e)}\r\n\r\n  }\r\n  async loadDigitalPlanet(web3) {\r\n      try {\r\n        const art = await this.state.contractInstance.methods.findPlanet(this.state.selectedId).call();\r\n        const owner = await this.state.contractInstance.methods.ownerOf(this.state.selectedId).call();\r\n        const index = await this.state.contractInstance.methods.index().call()\r\n\r\n        if(art != null){\r\n          let avaxPrice =  web3.utils.fromWei(art[3], 'ether')\r\n          this.setState({ hasData: true,art,avaxPrice,owner,\r\n            planetId:art[0],\r\n            creatorWallet:art[7],\r\n            planetBirthday:art[5],\r\n            index\r\n          })\r\n        } else {\r\n          this.setState({ hasData: false });\r\n        }\r\n \r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  async buyPlanet(tokenId, priceInEther) {\r\n    try {\r\n      const priceInWei =  window.web3.utils.toWei(priceInEther, 'ether');\r\n      await this.state.contractInstance.methods.buyPlanet(tokenId).send({\r\n          from: this.state.user, value: priceInWei\r\n      })\r\n      window.location.reload(); \r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasData) {\r\n      let style = {background:\"white\",paddingBottom:\"15px\",borderRadius:\"55px\"}\r\n      \r\n      let networkId, generationNumber, planetId, creatorWallet, planetBirthday, finalString\r\n\r\n      networkId = this.state.networkId\r\n      generationNumber = 1\r\n      planetId = this.state.planetId\r\n      creatorWallet = this.state.creatorWallet\r\n      planetBirthday = this.state.planetBirthday\r\n      finalString = networkId+\"-\"+generationNumber+\"-\"+planetId+\"-\"+creatorWallet+\"-\"+planetBirthday\r\n\r\n      console.log(\"@@@\",finalString)\r\n      let hasNext = parseInt(this.state.art[0]) < parseInt(this.state.index) -1\r\n      let next =parseInt(this.state.art[0]) +1\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n\r\n       \r\n            <div className=\"container\">\r\n                <div className=\"row\" style={{marginTop:\"50px\"}}  >\r\n                <div className=\"col-lg-12 col-md-12 mb-lg-0 mb-0\"></div>\r\n                    <div className=\"col-lg-12 col-md-12 mb-lg-0 mb-0\">\r\n                            <div style={style}>\r\n                            <div className=\"view overlay rounded z-depth-2 mb-2\">\r\n                              {/*<img className=\"img-fluid\" src={this.state.art[9]} alt=\"Sample\"/>*/}\r\n                              {/* this is for local\r\n                              <iframe style={{width:\"100%\",height:\"500px\",marginBottom:\"-15px\"}} src={\"http://localhost:8089/planet.html?seed=\"+finalString} /> */}\r\n                              <iframe style={{width:\"100%\",height:\"500px\",marginBottom:\"-15px\"}} src={\"https://cosmicroulette.github.io/site/planet.html?seed=\"+finalString} />\r\n\r\n\r\n                            </div>\r\n                            <h5 className=\"font-weight-bold mb-1 marginTopC\">Planet #{this.state.art[0]},  {this.state.art[1]}</h5>\r\n                            <div className=\"dark-grey-text text20\">  By <span className=\"font-weight-bold\">@{this.state.art[6]}</span></div>\r\n                            <p style={{whiteSpace: 'nowrap',overflow: 'hidden',textOverflow:'ellipsis'}}>Price: {this.state.avaxPrice} $AVAX </p>\r\n                            {/*<p style={{whiteSpace: 'nowrap',overflow: 'hidden',textOverflow:'ellipsis'}}>by <span className=\"font-weight-bold\">{this.state.art[6]}</span>, {this.state.art[5]}</p>\r\n                            \r\n                            <p className=\"alert alert-primary dark-grey-text text20\">{this.state.art[2]}</p>*/}\r\n                           {this.state.art[0] >0?\r\n                            <a onClick={()=>{this.loadDigitalPlanetWithID(this.state.art[0]-1)}}>\r\n                            <button className=\"btn btn-blue btn-rounded btn-md\" >See previous</button>\r\n                             </a>\r\n                          :null\r\n                          }\r\n                            { this.state.art[8] == this.state.art[7]?\r\n                              <>\r\n                                {window.user != this.state.art[7]?\r\n                                  <>\r\n                                    {this.state.art.status ==1?\r\n                                      <button className=\"btn btn-red btn-rounded btn-md\" onClick={e => (e.preventDefault(),this.buyPlanet(this.state.art[0], this.state.avaxPrice))}>Collect NFT</button>\r\n                                    :null}\r\n                                  </>\r\n                                  :null\r\n                                }\r\n                              </>\r\n                              \r\n                            : null}\r\n                            {hasNext?\r\n                            <a onClick={()=>{this.loadDigitalPlanetWithID(next)}}>\r\n                            <button className=\"btn btn-blue btn-rounded btn-md\" >See next</button>\r\n                             </a>\r\n                          :null\r\n                          }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 col-md-12 mb-lg-0 mb-0\"></div>\r\n                </div>\r\n              </div>\r\n              <div style={{color:\"white\"}}className=\"h1-responsive  font-weight-bold text-center my-5\">\r\n              Creator:<br/><span className=\"detail\">{this.state.art[7]}</span><br/>\r\n              Current owner:<br/><span className=\"detail\"> {this.state.owner}</span><br/>\r\n              Share URL:<br/><span className=\"detail\"> { window.location.href}</span><br/>\r\n              \r\n\r\n            </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n\r\n          <div  style={{color:\"white\"}} className=\"h1-responsive normal font-weight-bold text-center my-5\">\r\n            Create and trade Digital Planets on Cosmic Roulette \r\n          </div>\r\n          <p  style={{color:\"white\"}}  className=\"h1-responsive  normal font-weight-bold text-center my-5\">\r\n          All the planet data on Cosmic Roulette are on the blockchain\r\n          </p>\r\n\r\n\r\n\r\n          <div className=\"container\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n              You need metamask installed and configured on Avalanche c-chain to use this site! Learn how to do it by checking the links below. \r\n            </div>\r\n            <p ><a className=\"customA\" href=\"https://docs.avax.network/build/tutorials/smart-contracts/deploy-a-smart-contract-on-avalanche-using-remix-and-metamask\" target=\"_blank\">How to change metamask Network to Avax C-Chain Mainnet?</a></p>\r\n            <p ><a className=\"customA\" href=\"https://docs.avax.network/build/tutorials/platform/transfer-avax-between-x-chain-and-c-chain\" target=\"_blank\">Need help transferring $AVAX to c-chain?</a></p>\r\n            \r\n            </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default PlanetDetail;\r\n","import React from \"react\";\r\nimport {  Route, Switch ,HashRouter} from \"react-router-dom\";\r\n\r\nimport PlanetHome from './PlanetHome';\r\nimport CreatePlanet from './CreatePlanet';\r\nimport MyWallet from './MyWallet';\r\nimport PlanetDetail from './PlanetDetail';\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={PlanetHome} />\r\n        <Route exact path=\"/home\" component={PlanetHome} />\r\n\r\n        <Route exact path=\"/rollNft\" component={CreatePlanet} />\r\n        <Route exact path=\"/myWallet\" component={MyWallet} />\r\n        \r\n        <Route  path=\"/planet/:selectedId\" component={PlanetDetail} />\r\n      <Route\r\n        render={function() {\r\n          return <h1>Not Found</h1>;\r\n        }}\r\n      />\r\n    </Switch>\r\n    </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"../node_modules/react\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter as Router } from \"../node_modules/react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n     \r\n\r\n      <Router>\r\n      <div>\r\n        <main>\r\n        <Routes />\r\n        </main>\r\n      </div>\r\n      </Router>\r\n    \r\n\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}